/*
21.	Вычислить размер коллстэка в основных браузерах: Chrome, Firefox, Opera и Safari (если есть возможность).
*/

//Проверим размер колстека через глубину вызова рекурсии. Как только вылетит ошибка - значит стек переполнился.
// let callStackSize = 0;
// function recursiveFunction() {   
//    try {
//       callStackSize++;
//       recursiveFunction();
//    } catch (error) {
//       console.error('Максимальный размер коллстека:', callStackSize);
//    }
// }

// recursiveFunction();

/*-------------------------5 переменных-------------------------*/

let callStackSize = 0;
function recursiveFunction() {
   try {
      let a = callStackSize + 1;
      let b = a + 1;
      let c = b + 1;
      let d = c + 1;
      let e = d + 1;
      let g = e + 1;
      let l = g + 1;
      callStackSize++;
      recursiveFunction();
   } catch (error) {
      console.error('Максимальный размер коллстека:', callStackSize);
   }
}

recursiveFunction();

//0 переменных
//Яндекс Браузер: 8958
//Google Chrome:15449
//Opera: 8962


//5переменных
//Opera: 6604
//Google Chrome:11609
//Яндекс браузер 6601

/*Из статьи https://habr.com/ru/articles/550534/ о размере стека:

Если добавить объявление дополнительных переменных то глубина рекурсии сильно сокращается.

 "На каждый вызов функции создается Execution Context - контекст вызова функции. 
 В нем, помимо разных "подкапотных" штук, содержатся все переменные, которые мы объявили внутри функции. 
 Как Execution Context, так и каждая переменная внутри него имеют определенный размер, который они занимают в памяти."

N-размер Execution Stack
K-сумма размеров всех переменных внутри функции
X-неизвестный размер коллстека
SizeOfVar- количество байт, которые занимает переменная в памяти

Количество байт которое занимает функция:
FunctionSize=N+K*SizeOfVar;

Расчеты проведем в браузере Opera:
K=0:
X=(N+0*SizeOfVar)*8962=N*8962

K=5:
X=(N+5*SizeOfVar)*6604

Приравняем:
N*8962=(N+5*SizeOfVar)*6604

Каждое число - 8 байт
N*8962=(N+5*8)*6604
N*8962=(N+40)*6604
N*8962=40*N+40*6604
N*8962=40*N+264160
8922*N=26460
N=29 (байт)

Подставим N в первое уравнение:
X=29*8962=259898 (байтов)

Проверка для 7 переменных:
(72+7*8)
*/